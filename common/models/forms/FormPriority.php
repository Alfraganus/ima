<?php

namespace common\models\forms;

use common\models\Application;
use common\models\ApplicationForm;
use common\models\ApplicationFormMedia;
use common\models\ApplicationWizard;
use common\models\User;
use common\models\UserApplications;
use common\models\WorldCountries;
use frontend\models\ImaUsers;
use Yii;

/**
 * This is the model class for table "form_priority".
 *
 * @property int $id
 * @property int|null $user_id
 * @property int|null $user_application_id
 * @property int|null $user_application_wizard_id
 * @property int|null $priority_type
 * @property string|null $application_type
 * @property string|null $application_number
 * @property string|null $submitted_application_date
 * @property int|null $country_code_id
 *
 * @property User $user
 * @property Application $userApplication
 * @property ApplicationWizard $userApplicationWizard
 */
class FormPriority extends \yii\db\ActiveRecord
{
    /**
     * {@inheritdoc}
     */
    public static function tableName()
    {
        return 'form_priority';
    }

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['user_id', 'user_application_id', 'user_application_wizard_id', 'priority_type', 'country_code_id'], 'integer'],
            [['submitted_application_date'], 'safe'],
            [['application_type', 'application_number'], 'string', 'max' => 255],
            [['user_application_id'], 'exist', 'skipOnError' => true, 'targetClass' => UserApplications::class, 'targetAttribute' => ['user_application_id' => 'id']],
            [['user_id'], 'exist', 'skipOnError' => true, 'targetClass' => ImaUsers::class, 'targetAttribute' => ['user_id' => 'id']],
            [['user_application_wizard_id'], 'exist', 'skipOnError' => true, 'targetClass' => ApplicationWizard::class, 'targetAttribute' => ['user_application_wizard_id' => 'id']],
        ];
    }


    public function beforeSave($insert)
    {
        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }

    public static function run($user_id, $application_id, $wizard_id, $form_id = null)
    {
        return self::findAll([
            'user_application_id' => $application_id,
            'user_id' => $user_id,
            'user_application_wizard_id' => $wizard_id,
        ]);
    }

    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return [
            'id' => Yii::t('app', 'ID'),
            'user_id' => Yii::t('app', 'User ID'),
            'user_application_id' => Yii::t('app', 'User Application ID'),
            'user_application_wizard_id' => Yii::t('app', 'User Application Wizard ID'),
            'priority_type' => Yii::t('app', 'Priority Type'),
            'application_number' => Yii::t('app', 'Questionnaire Number'),
            'submitted_application_date' => Yii::t('app', 'Requested Data'),
            'country_code_id' => Yii::t('app', 'Country code ID'),
        ];
    }


    public function fields()
    {
        return [
            'form_id' => function () {
                return $this->getFormId();
            },
            'id',
            'user_id',
            'user_application_id',
            'user_application_wizard_id',
            'priority_type' => function () {
                return [
                    'id' => $this->priority_type,
                    'name' => $this->getPriorityType($this->priority_type)
                ];
            },
            'application_number',
            'submitted_application_date' => function () {
                return date('d-m-Y', strtotime($this->submitted_application_date));
            },
            'country_code_id' => function () {
                $worldCountries = WorldCountries::findOne($this->country_code_id);
                return [
                    'id' => $this->country_code_id,
                    'name' => $worldCountries ? $worldCountries->country_code : null
                ];
            },
            'application_type',
            'file' => function () {
                return ApplicationFormMedia::find()->where([
                    'application_id' => $this->user_application_id,
                    'user_id' => $this->user_id,
                    'wizard_id' => $this->user_application_wizard_id,
                    'form_id' => $this->getFormId(),
                ])->select(['id', 'file_name', 'file_path'])->all();
            }
        ];
    }

    public static function getPriorityType($data_id)
    {
        $data = [
            1 => 'Конвенционный приоритет',
            2 => 'По Дополнительным материалам к болоо ранной заявкe',
            3 => 'Первоначальная заявкаб из которой выдолона настоящая заявка',
            4 => 'Более ранняя заявка',
        ];

        return $data_id ? $data[$data_id] : $data;
    }

    public function getFormId()
    {
        return ApplicationForm::findOne(['form_class' => get_called_class()])->id;
    }

    /**
     * Gets query for [[User]].
     *
     * @return \yii\db\ActiveQuery
     */
    public function getUser()
    {
        return $this->hasOne(ImaUsers::class, ['id' => 'user_id']);
    }

    /**
     * Gets query for [[UserApplication]].
     *
     * @return \yii\db\ActiveQuery
     */
    public function getUserApplication()
    {
        return $this->hasOne(UserApplications::class, ['id' => 'user_application_id']);
    }

    /**
     * Gets query for [[UserApplicationWizard]].
     *
     * @return \yii\db\ActiveQuery
     */
    public function getUserApplicationWizard()
    {
        return $this->hasOne(ApplicationWizard::class, ['id' => 'user_application_wizard_id']);
    }
}
